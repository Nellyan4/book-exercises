#install.packages("dplyr")
library("dplyr")
#################
#### PART 1 #####
#################
#1.
projects_df <- read.csv("data/ks-projects-201801.csv", stringsAsFactors = FALSE)
#2.
colnames(projects_df)
nrow(projects_df)
#3.
summary(projects_df)
#4.
#1) The first thing I found interesting is that in the pleged, usd.pledged, and usd_pledged_real data, the mean is way
#    higher than the median, a question arises to me is whether there is a lot of kickstarter that does not receive
#    a good amount of funding by the backers.
#2) The second thing I found interesting is the goal's mean is way higher than the pledge's mean, a question that
#    arises to me is that if there are a lot of kickstarter's funding they receive does not reach their goal.
#################
#### PART 2 #####
#################
#1. Already installed and libraried.
#2.
num_nothing_pledged <- nrow(filter(projects_df, pledged == 0))
print(num_nothing_pledged)
#3.
percent_successful <- round(nrow(filter(projects_df, state == "successful")) / nrow(projects_df), 2)
print(percent_successful)
#4.
num_projects_2018 <- projects_df %>%
filter(startsWith(deadline, "2018")) %>%
nrow()
print(num_projects_2018)
#5.
most_pledged <- projects_df %>%
select(name, category,pledged) %>%
filter(pledged == max(pledged)) %>%
select(name, category)
print(most_pledged)
#6.
highest_goal <- projects_df %>%
select(name, category, goal) %>%
filter(goal == max(goal)) %>%
select(name, category) %>%
arrange(category)
print(highest_goal)
#7.
biggest_failure <- projects_df %>%
select(name, state, pledged) %>%
filter(state == "failed") %>%
filter(pledged == max(pledged)) %>%
select(name, pledged)
print(biggest_failure)
#8.
projects_df <- mutate(
projects_df,
margin = abs(pledged - goal)
)
largest_margin <- projects_df %>%
select(name, state, margin) %>%
filter(state == "successful") %>%
filter(margin == max(margin)) %>%
select(name, margin)
print(largest_margin)
#9.
average_and_total <- projects_df %>%
filter(state != "successful") %>%
summarize(
average = mean(pledged),
total = sum(pledged)
)
print(average_and_total)
#################
#### PART 3 #####
#################
#1.
category_counts <- projects_df %>%
group_by(category) %>%
summarize(count = n()) %>%
arrange(desc(count)) %>%
print(category, count)
#2.
highest_avg_backers <- projects_df %>%
group_by(category) %>%
summarize(avg_backers = mean(backers)) %>%
filter(avg_backers == max(avg_backers)) %>%
pull(category)
print(highest_avg_backers)
num_chiptune <- projects_df %>%
filter(category == "Chiptune") %>%
nrow()
print(num_chiptune)
# The reason why chiptune has the highest average backer is because it needs a lot of money to research, and needs a lot
#  of skills and technology, that's why it also only have 35 this kind of kickstarters.
#3.
top_3_categories <- projects_df %>%
filter(startsWith(deadline, "2018")) %>%
group_by(category) %>%
summarize(total_backers = sum(backers)) %>%
arrange(desc(total_backers)) %>%
top_n(3, total_backers) %>%
print(category, total_backers)
print(top_3_categories)
#4. Not right
popularity_by_year <- projects_df %>%
mutate(year = substr(launched, 1,4)) %>%
group_by(year) %>%
summarize(total_backers = sum(backers),
total_pledged = sum(pledged)) %>%
print(year, total_backers, total_pledged)
print(popularity_by_year)
#5.
#################
#### PART 4 #####
#################
# Your script for Part 4 goes here (and delete this comment!)
projects_df <- read.csv("data/ks-projects-201801.csv", stringsAsFactors = FALSE)
setwd("~/Desktop/a4-wrangling-data-Nellyan4")
#install.packages("dplyr")
library("dplyr")
#################
#### PART 1 #####
#################
#1.
projects_df <- read.csv("data/ks-projects-201801.csv", stringsAsFactors = FALSE)
#2.
colnames(projects_df)
nrow(projects_df)
#3.
summary(projects_df)
#4.
#1) The first thing I found interesting is that in the pleged, usd.pledged, and usd_pledged_real data, the mean is way
#    higher than the median, a question arises to me is whether there is a lot of kickstarter that does not receive
#    a good amount of funding by the backers.
#2) The second thing I found interesting is the goal's mean is way higher than the pledge's mean, a question that
#    arises to me is that if there are a lot of kickstarter's funding they receive does not reach their goal.
#################
#### PART 2 #####
#################
#1. Already installed and libraried.
#2.
num_nothing_pledged <- nrow(filter(projects_df, pledged == 0))
print(num_nothing_pledged)
#3.
percent_successful <- round(nrow(filter(projects_df, state == "successful")) / nrow(projects_df), 2)
print(percent_successful)
#4.
num_projects_2018 <- projects_df %>%
filter(startsWith(deadline, "2018")) %>%
nrow()
print(num_projects_2018)
#5.
most_pledged <- projects_df %>%
select(name, category,pledged) %>%
filter(pledged == max(pledged)) %>%
select(name, category)
print(most_pledged)
#6.
highest_goal <- projects_df %>%
select(name, category, goal) %>%
filter(goal == max(goal)) %>%
select(name, category) %>%
arrange(category)
print(highest_goal)
#7.
biggest_failure <- projects_df %>%
select(name, state, pledged) %>%
filter(state == "failed") %>%
filter(pledged == max(pledged)) %>%
select(name, pledged)
print(biggest_failure)
#8.
projects_df <- mutate(
projects_df,
margin = abs(pledged - goal)
)
largest_margin <- projects_df %>%
select(name, state, margin) %>%
filter(state == "successful") %>%
filter(margin == max(margin)) %>%
select(name, margin)
print(largest_margin)
#9.
average_and_total <- projects_df %>%
filter(state != "successful") %>%
summarize(
average = mean(pledged),
total = sum(pledged)
)
print(average_and_total)
#################
#### PART 3 #####
#################
#1.
category_counts <- projects_df %>%
group_by(category) %>%
summarize(count = n()) %>%
arrange(desc(count)) %>%
print(category, count)
#2.
highest_avg_backers <- projects_df %>%
group_by(category) %>%
summarize(avg_backers = mean(backers)) %>%
filter(avg_backers == max(avg_backers)) %>%
pull(category)
print(highest_avg_backers)
num_chiptune <- projects_df %>%
filter(category == "Chiptune") %>%
nrow()
print(num_chiptune)
# The reason why chiptune has the highest average backer is because it needs a lot of money to research, and needs a lot
#  of skills and technology, that's why it also only have 35 this kind of kickstarters.
#3.
top_3_categories <- projects_df %>%
filter(startsWith(deadline, "2018")) %>%
group_by(category) %>%
summarize(total_backers = sum(backers)) %>%
arrange(desc(total_backers)) %>%
top_n(3, total_backers) %>%
print(category, total_backers)
print(top_3_categories)
#4. Not right
popularity_by_year <- projects_df %>%
mutate(year = substr(launched, 1,4)) %>%
group_by(year) %>%
summarize(total_backers = sum(backers),
total_pledged = sum(pledged)) %>%
print(year, total_backers, total_pledged)
print(popularity_by_year)
#5.
#################
#### PART 4 #####
#################
# Your script for Part 4 goes here (and delete this comment!)
popularity_by_year <- projects_df %>%
mutate(year = substr(launched, 1,4)) %>%
group_by(year) %>%
summarize(total_backers = sum(backers),
total_pledged = sum(pledged)) %>%
print(year, total_backers, total_pledged)
print(popularity_by_year)
# What was the average departure delay in each month?
# Save this as a data frame `dep_delay_by_month`
# Hint: you'll have to perform a grouping operation then summarizing your data
View(flights)
setwd("~/Desktop/book-exercises/chapter-11-exercises/exercise-5")
# What was the average departure delay in each month?
# Save this as a data frame `dep_delay_by_month`
# Hint: you'll have to perform a grouping operation then summarizing your data
View(flights)
library("nycflights13")
library("dplyr")
# What was the average departure delay in each month?
# Save this as a data frame `dep_delay_by_month`
# Hint: you'll have to perform a grouping operation then summarizing your data
View(flights)
# Which month had the greatest average departure delay?
filter(avg_dep_delay == max(avg_dep_delay))
# To which destinations were the average arrival delays the highest?
# Hint: you'll have to perform a grouping operation then summarize your data
# You can use the `head()` function to view just the first few rows
flights %>%
group_by(dest) %>%
summarise(
avg_arr_delay = mean(arr_delay, na.rm = TRUE)
) %>%
filter(avg_arr_delay == max(avg_arr_delay))
flights %>%
group_by(dest) %>%
summarise(
avg_arr_delay = mean(arr_delay, na.rm = TRUE)
) %>%
filter(avg_arr_delay == max(avg_arr_delay))
airports %>%
filter(faa -- "CAE")
flights %>%
group_by(dest) %>%
summarize(
ave_speed = mean(distance/air_time, na.rm = TRUE)
)
#install.packages("dplyr")
library("dplyr")
#################
#### PART 1 #####
#################
#1.
projects_df <- read.csv("data/ks-projects-201801.csv", stringsAsFactors = FALSE)
#2.
colnames(projects_df)
nrow(projects_df)
#3.
summary(projects_df)
#4.
#1) The first thing I found interesting is that in the pleged, usd.pledged, and usd_pledged_real data, the mean is way
#    higher than the median, a question arises to me is whether there is a lot of kickstarter that does not receive
#    a good amount of funding by the backers.
#2) The second thing I found interesting is the goal's mean is way higher than the pledge's mean, a question that
#    arises to me is that if there are a lot of kickstarter's funding they receive does not reach their goal.
#################
#### PART 2 #####
#################
#1. Already installed and libraried.
#2.
num_nothing_pledged <- nrow(filter(projects_df, pledged == 0))
print(num_nothing_pledged)
#3.
percent_successful <- round(nrow(filter(projects_df, state == "successful")) / nrow(projects_df), 2)
print(percent_successful)
#4.
num_projects_2018 <- projects_df %>%
filter(startsWith(deadline, "2018")) %>%
nrow()
print(num_projects_2018)
#5.
most_pledged <- projects_df %>%
select(name, category,pledged) %>%
filter(pledged == max(pledged)) %>%
select(name, category)
print(most_pledged)
#6.
highest_goal <- projects_df %>%
select(name, category, goal) %>%
filter(goal == max(goal)) %>%
select(name, category) %>%
arrange(category)
print(highest_goal)
#7.
biggest_failure <- projects_df %>%
select(name, state, pledged) %>%
filter(state == "failed") %>%
filter(pledged == max(pledged)) %>%
select(name, pledged)
print(biggest_failure)
#8.
projects_df <- mutate(
projects_df,
margin = abs(pledged - goal)
)
largest_margin <- projects_df %>%
select(name, state, margin) %>%
filter(state == "successful") %>%
filter(margin == max(margin)) %>%
select(name, margin)
print(largest_margin)
#9.
average_and_total <- projects_df %>%
filter(state != "successful") %>%
summarize(
average = mean(pledged),
total = sum(pledged)
)
print(average_and_total)
#################
#### PART 3 #####
#################
#1.
category_counts <- projects_df %>%
group_by(category) %>%
summarize(count = n()) %>%
arrange(desc(count)) %>%
print(category, count)
#2.
highest_avg_backers <- projects_df %>%
group_by(category) %>%
summarize(avg_backers = mean(backers)) %>%
filter(avg_backers == max(avg_backers)) %>%
pull(category)
print(highest_avg_backers)
num_chiptune <- projects_df %>%
filter(category == "Chiptune") %>%
nrow()
print(num_chiptune)
# The reason why chiptune has the highest average backer is because it needs a lot of money to research, and needs a lot
#  of skills and technology, that's why it also only have 35 this kind of kickstarters.
#3.
top_3_categories <- projects_df %>%
filter(startsWith(deadline, "2018")) %>%
group_by(category) %>%
summarize(total_backers = sum(backers)) %>%
arrange(desc(total_backers)) %>%
top_n(3, total_backers) %>%
print(category, total_backers)
print(top_3_categories)
#4. Not right
popularity_by_year <- projects_df %>%
mutate(year = substr(launched, 1,4)) %>%
group_by(year) %>%
summarize(total_backers = sum(backers),
total_pledged = sum(pledged)) %>%
print(year, total_backers, total_pledged)
print(popularity_by_year)
#5.
# The popularity by year generally increases as the year increases.
# The total backers and total pledged increases throughout 2009 to 2016,
#  and there's even a huge junp from 2011 to 2012.
#6.
most_popular_launch_day <- projects_df %>%
mutate(weekdays = weekdays(as.Date(launched))) %>%
group_by(weekdays) %>%
summarize(sum_weekdays = length(weekdays)) %>%
filter(sum_weekdays == max(sum_weekdays)) %>%
pull(weekdays)
#7.
#################
#### PART 4 #####
#################
# Your script for Part 4 goes here (and delete this comment!)
popularity_by_year <- projects_df %>%
mutate(year = substr(launched, 1,4)) %>%
group_by(year) %>%
summarize(total_backers = sum(backers),
total_pledged = sum(pledged)) %>%
print(year, total_backers, total_pledged)
print(popularity_by_year)
popularity_by_year <- projects_df %>%
mutate(year = substr(launched, 1,4)) %>%
group_by(year) %>%
summarize(total_backers = sum(backers),
total_pledged = sum(pledged)) %>%
print(year, total_backers, total_pledged)
projects_df
View(projects_df)
popularity_by_year <- projects_df %>%
mutate(year = substr(launched, 1,4)) %>%
group_by(year)
popularity_by_year
View(popularity_by_year)
popularity_by_year <- projects_df %>%
mutate(year = substr(launched, 1,4)) %>%
group_by(year) %>%
summarize(total_backers = sum(backers),
total_pledged = sum(pledged)) %>%
pull(year, total_backers, total_pledged)
popularity_by_year <- projects_df %>%
mutate(year = substr(launched, 1,4)) %>%
group_by(year) %>%
summarize(total_backers = sum(backers),
total_pledged = sum(pledged)) %>%
print(year, total_backers, total_pledged)
popularity_by_year <- projects_df %>%
mutate(year = substr(launched, 1,4)) %>%
group_by(year) %>%
summarize(total_backers = sum(backers),
total_pledged = sum(pledged)) %>%
View(popularity_by_year)
print(popularity_by_year)
popularity_by_year <- projects_df %>%
mutate(year = substr(launched, 1,4)) %>%
group_by(year) %>%
summarize(total_backers = sum(backers),
total_pledged = sum(pledged))
popularity_by_year
